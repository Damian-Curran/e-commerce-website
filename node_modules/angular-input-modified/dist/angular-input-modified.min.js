/**
 * angular-input-modified - Angular module to detect and indicate input modifications
 * @version v2.4.2
 * @link https://github.com/betsol/angular-input-modified
 * @license MIT
 *
 * @author Slava Fomin II <s.fomin@betsol.ru>
 */
!function(i,e){"use strict";function o(){return{restrict:"A",controller:["$scope","$element","$attrs",function(i,e,o){this.isEnabled=function(){return"true"==o.bsModifiable}}]}}e.module("ngInputModified",[]).directive("bsModifiable",o)}(window,angular),function(i,e){"use strict";function o(){var i={enabledGlobally:!0,modifiedClassName:"ng-modified",notModifiedClassName:"ng-not-modified"};return{enableGlobally:function(){return i.enabledGlobally=!0,this},disableGlobally:function(){return i.enabledGlobally=!1,this},setModifiedClassName:function(e){return i.modifiedClassName=String(e),this},setNotModifiedClassName:function(e){return i.notModifiedClassName=String(e),this},$get:function(){return i}}}e.module("ngInputModified").provider("inputModifiedConfig",o)}(window,angular),function(i){"use strict";function e(e,o,d){var n=o;return{name:"form",restrict:d?"EAC":"E",require:["?form"],link:function(o,d,t,f){function a(){i.forEach(c.modifiedModels,function(i){i.reset()}),i.forEach(c.modifiedChildForms,function(i){i.reset()})}function l(i,e){var o=e.indexOf(i),d=-1!==o;i.modified&&!d?(e.push(i),r()):!i.modified&&d&&(e.splice(o,1),r())}function r(){u(),C&&"function"==typeof C.$$onChildFormModifiedStateChanged&&C.$$onChildFormModifiedStateChanged(c),s(),o.$emit("inputModified.formChanged",c.modified,c)}function u(){c.modifiedCount=c.modifiedModels.length,c.modifiedChildFormsCount=c.modifiedChildForms.length,c.modified=c.modifiedCount+c.modifiedChildFormsCount>0}function s(){e.addClass(d,c.modified?n.modifiedClassName:n.notModifiedClassName),e.removeClass(d,c.modified?n.notModifiedClassName:n.modifiedClassName)}function m(i){var e=c.modifiedChildForms.indexOf(i);-1!==e&&(c.modifiedChildForms.splice(e,1),r())}var c=f[0],C=c.$$parentForm||d.parent().controller("form");c&&(c.modified=!1,c.reset=a,c.modifiedCount=0,c.modifiedModels=[],c.$$onChildModelModifiedStateChanged=function(i){l(i,c.modifiedModels)},c.modifiedChildFormsCount=0,c.modifiedChildForms=[],c.$$onChildFormModifiedStateChanged=function(i){l(i,c.modifiedChildForms)},c.$$onChildFormDestroyed=m,d.on("$destroy",function(){C&&"function"==typeof C.$$onChildFormDestroyed&&C.$$onChildFormDestroyed(c)}))}}}i.module("ngInputModified").directive("form",["$animate","inputModifiedConfig",function(i,o){return e(i,o,!1)}]).directive("ngForm",["$animate","inputModifiedConfig",function(i,o){return e(i,o,!0)}])}(angular),function(i,e){"use strict";function o(i,e,o,n){var t=e;return{restrict:"A",require:["?ngModel","?^form","?^bsModifiable"],link:function(e,f,a,l){function r(){v||u();var i=!d(M.$modelValue,M.masterValue);M.modified!==i&&(M.modified=i,g&&"function"==typeof g.$$onChildModelModifiedStateChanged&&g.$$onChildModelModifiedStateChanged(M),s())}function u(){M.masterValue=M.$modelValue,s(),v=!0}function s(){i.addClass(f,M.modified?t.modifiedClassName:t.notModifiedClassName),i.removeClass(f,M.modified?t.notModifiedClassName:t.modifiedClassName)}function m(){var i=arguments;C(function(){y.apply(M,i),M.masterValue=M.$modelValue,M.modified=!1,g&&"function"==typeof g.$$onChildModelModifiedStateChanged&&g.$$onChildModelModifiedStateChanged(M),s()})}function c(){$||($=n(h).assign),$(e,M.masterValue)}function C(i){var e=M.$modelValue;M.$modelValue=null,o(function(){M.$modelValue=e,o(i,0)},0)}var $,h=a.ngModel,M=l[0],g=l[1],p=l[2];if(M){var b=p?p.isEnabled():void 0;if(!(t.enabledGlobally&&!1===b||!t.enabledGlobally&&!0!==b)){var v=!1,y=M.$setPristine;M.$setPristine=m,M.modified=!1,M.masterValue=void 0,M.reset=c,e.$watch(h,r)}}}}}function d(i,o){return i=n(i),o=n(o),"object"==typeof i&&"object"==typeof o?i instanceof Date&&o instanceof Date?i.getTime()===o.getTime():e.equals(i,o):i==o}function n(i){return void 0===i||""===i?null:i}e.module("ngInputModified").directive("ngModel",o),o.$inject=["$animate","inputModifiedConfig","$timeout","$parse"]}(window,angular);